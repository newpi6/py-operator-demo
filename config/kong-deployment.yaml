apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    note: generated
  labels:
    app: kong
    type: generated
  name: kong-env
  namespace: default
data:
  KONG_ADMIN_LISTEN: 0.0.0.0:8001
  KONG_DATABASE: postgres
  KONG_PG_DATABASE: kong
  KONG_PG_HOST: postgres
  KONG_PG_PORT: "5432"
  KONG_PG_USER: kong
  KONG_PG_PASSWORD: kong
  KONG_PROXY_LISTEN: 0.0.0.0:8000 reuseport backlog=16384, 0.0.0.0:8090 http2 reuseport backlog=16384, 0.0.0.0:8443 http2 ssl reuseport backlog=16384
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kong-migrations
spec:
  template:
    metadata:
      name: kong-migrations
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - kong migrations bootstrap
        envFrom:
        - configMapRef:
            name: kong-env
        image: kong:2.1
        name: kong-migrations
      initContainers:
      - command:
        - /bin/sh
        - -c
        - until nc -zv $KONG_PG_HOST $KONG_PG_PORT -w1; do echo 'waiting for db'; sleep 1; done
        envFrom:
        - configMapRef:
            name: kong-env
        image: busybox
        name: wait-for-postgres
      restartPolicy: OnFailure

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kong
  name: kong
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kong
  template:
    metadata:
      labels:
        app: kong
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: kong-env
        image: kong:2.1
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - kong quit
        name: kong
        ports:
        - containerPort: 8000
          name: proxy
          protocol: TCP
        - containerPort: 8090
          name: proxy-http2
          protocol: TCP
        - containerPort: 8443
          name: proxy-ssl
          protocol: TCP
        - containerPort: 8001
          name: admin
          protocol: TCP
      initContainers:
      - command:
        - /bin/sh
        - -c
        - while true; do kong migrations list; if [[ 0 -eq $? ]]; then exit 0; fi; sleep 2;  done;
        envFrom:
        - configMapRef:
            name: kong-env
        image: kong:2.1
        name: wait-for-migrations
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kong
  name: kong
  namespace: default
spec:
  ports:
  - name: proxy
    nodePort: 30000
    port: 8000
    protocol: TCP
    targetPort: 8000
  - name: proxy-http2
    port: 8090
    protocol: TCP
    targetPort: 8090
  - name: proxy-ssl
    nodePort: 30451
    port: 8443
    protocol: TCP
    targetPort: 8443
  - name: admin
    nodePort: 30001
    port: 8001
    protocol: TCP
    targetPort: 8001
  selector:
    app: kong
  type: NodePort